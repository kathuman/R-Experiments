library(XML)
url <- "http://www.gdacs.org/Cyclones/report.aspx?eventid=41058&episodeid=28&eventtype=TC"
dat <- readHTMLTable(readLines(url), which=5)
dat$latlon <- dat[,8]
levels(dat$latlon) <- sapply(
strsplit(levels(dat[,8]), ",\n "),
function(x) paste(x[2], x[1], sep=":")
)
dat$Category <- factor(dat$Category, levels=levels(dat$Category)[c(6,7,1:5)],
ordered=TRUE)
dat$cat <- as.numeric(dat$Category)
dat$Gust_kmh <- dat[,6]
levels(dat$Gust_kmh) <- sapply(strsplit(levels(dat[,6]), "km"),
function(x) gsub(" ", "",x[1]))
dat$Gust_kmh <- as.numeric(as.character(dat$Gust_kmh))
install.packages("googleVis")
library(googleVis)
M <- gvisGeoChart(dat, "latlon", sizevar="cat",
colorvar="Gust_kmh",
options=list(region='035',
backgroundColor="lightblue",
datalessRegionColor="grey"))
plot(M)
#####################
library(WDI)
indnams <- c("fertility.rate", "life.expectancy",
"population", "GDP.per.capita.Current.USD",
"15.to.25.yr.female.literacy")
inds <- c('SP.DYN.TFRT.IN','SP.DYN.LE00.IN',
'SP.POP.TOTL','NY.GDP.PCAP.CD',
'SE.ADT.1524.LT.FE.ZS')
wdiData <- WDI(country="all", indicator=inds,
start=1960, end=format(Sys.Date(), "%Y"),
extra=TRUE)
colnum <- match(inds, names(wdiData))
names(wdiData)[colnum] <- indnams
## Create a motion chart
library(googleVis)
WorldBank <- droplevels(subset(wdiData,
!region %in% "Aggregates"))
M <- gvisMotionChart(WorldBank,
idvar="country", timevar="year",
xvar="life.expectancy",
yvar="fertility.rate",
colorvar="region",
sizevar="population",
options=list(width=550, height=500))
## Display the chart in the browser
plot(M)
View(wdiData)
View(WorldBank)
View(WorldBank)
View(wdiData)
View(wdiData)
View(WorldBank)
View(WorldBank)
WorldBank1 <- droplevels(subset(wdiData,
region %in% "Aggregates"))
View(WorldBank1)
View(WorldBank1)
M <- gvisMotionChart(WorldBank,
idvar="country", timevar="year",
xvar="life.expectancy",
yvar="fertility.rate",
colorvar="region",
sizevar="population",
options=list(width=550, height=500))
plot(M)
2+2
q()
setwd("C:/Users/kathuman/AppData/Local/Temp/Temp1_Ex_Files_RStats_EssT.zip/Ex_Files_RStats_EssT/Exercise Files/Ch03/03_06")
setwd("C:/Users/kathuman/AppData/Local/Temp/Temp1_Ex_Files_RStats_EssT.zip/Ex_Files_RStats_EssT/Exercise Files/Ch03/03_06")
browseURL("http://j.mp/12YPV5L")
browseURL("http://cran.r-project.org/web/views/Robust.html")
?state.area
area <- state.area
area
hist(area)
boxplot(area)
boxplot.stats(area)
summary(area)
mean(area)  #not robust
median(area)
mean(area, trim=0.05)  #trimming 5% fromeach end (10% of the total)
mean(area, trim=0.1)
mean(area, trim=0.2)
mean(area, trim=0.5) #counterintuitive but it gives the median
sd(area) #not robust
mad(area) #median absolute deviation
IQR(area) #Interquartile range
fivenum(area) #Tukey's hinges (similar to quartiles)
rm(list=ls()) #clean up
setwd("~/R/Lynda R classes/Ex_Files_RStats_EssT/Exercise Files/Ch04/04_01")
setwd("~/R/Lynda R classes/Ex_Files_RStats_EssT/Exercise Files/Ch04/04_01")
OS <-read.csv("OS.csv", header=TRUE)
View(OS)
View(OS)
View(OS)
OS
OS.hi <- subset(OS, Proportion>0.1)
OS.hi
require("datasets")
?rivers
data(rivers)
hist(rivers)
boxplot(rivers, horizontal=TRUE)
boxplot.stats(rivers)
rivers.low <- rivers[rivers<1210] #remove outliers
boxplot(rivers.low, horizontal=TRUE)
boxplot.stats(rivers.low)
require(datasets)
?islands
islands
hist(islands)
boxplot(islands)
islands.z <- scale(islands)  #M=0, SD=1
islands.z
hist(islands.z, breaks=16)
boxplot(islands.z)
mean(islands.z)
sd(islands.z)
attr(islands.z, "scaled:center") #shows the original mean
attr(islands.z, "scaled:scale") #shows the original SD
islands.z <- as.numeric(islands.z) #converts the matrix back to numeric
islands.z
islands.ln <- log(islands)
islands.log10 <- log10(islands)
hist(islands.ln)
boxplot(islands.ln)
islands.rank1 <- rank(islands)
hist(islands.rank1)
boxplot(islands.rank1)
islands.rank2 <- rank(islands, ties.method="random")
hist(islands.rank2)
boxplot(islands.rank2)
continent <- ifelse(islands>1000,1,0)
continent
rm(list=ls()) #Clean up
